

: Le rouleau compresseur (tiré du Virus n°10)
MOV 0 1 : se recopie sur la case suivante


: Le radar (tiré du Virus n°10)
: Il détecte l'arrivée d'un rouleau compresseur et se recopie plus loin
: malheureusement, il ne voit pas l'arrivée du bombardier
MOV #1 -100 : le mouchard qui indiquera l'arrivée du rouleau compresseur
ADD #19 14
MOV #0 @13
CMP #1 -103 : vérifie le mouchard
JMP -3 : revient au début
MOV @11 @12 : début du code permettant la duplication du programme
CMP #1 10 : si la copie est terminée...
JMP 4 : ... saut en fin de programme
ADD #1 8 : incrémentation des pointeurs
ADD #1 8
JMP -5 : retourne au MOV @11 @12
MOV #-16 -129 : ajoute un DAT -16 à la fin de la copie du programme
MOV #-16 -129
MOV #-150 -129
JMP -147 : saute au début de la copie du prog
DAT -16 : données utilisées par le programme
DAT -16
DAT -150


: Le bombardier (tiré du Virus n°10)
ADD #-1 -1
MOV #0 @-2
JMP -2


: la mitraillette : balance des DAT 0 de + en + loin
: au mépris des règles élémentaires de sécurité qui
: lui éviteraient pourtant de se tirer dessus !
add 5 4 : data = data + compteur
add #1 4 : compteur++
mov #0 @2 : bombarde la case pointee par data
jmp -3 : revient au debut
dat 1 : case data
dat 1 : case compteur


: Le Super Bombardier fait un coup en avant / un coup
: en arrière, et ce de plus en plus loin
sub #1 -1
mov #0 @-2
add #1 3
mov #0 @2
jmp -4


:
: Le bombardier mobile
: balance un DAT puis se deplace
:
mov #0 30 : balance le DAT en avant
mov @9 @10 : copie adresse depart vers adresse destination
add #1 8 : ajoute 1 a adresse depart
add #1 8 : ajoute 1 a adresse destination
cmp #0 6 : si tout a ete copie...
jmp 2 : ... saute en fin de la duplication
jmp -5 : retourne au mov @11 @12
mov #-10 16 : cree un DAT -10 a la fin de la copie
mov #2 16 : cree un DAT 2 a la fin de la copie
jmp 4 : saute au debut de la copie
dat -10 : adresse depart
dat 2 : adresse destination


:
: Crée des rouleaux compresseurs
: CW version étendue uniquement
:
mov 4 @5
fork @4
add #5 3
jmp -3
mov 0 1
dat 100
